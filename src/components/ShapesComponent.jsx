import React, { useEffect, useRef, useState } from "react";
import useDataSchema from "../hooks/useDataSchema";
import ComponentFields from "./tokens/ComponentFields";
import { showPreview } from "./utils";

const slashes = `<svg width="167" height="107" viewBox="0 0 167 107" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M87.1132 1.04286L87.1128 1.04337C86.6896 1.55271 86.2787 2.04727 85.826 2.5C84.8049 3.40765 83.7918 4.32334 82.78 5.23795L82.7799 5.23803L82.7798 5.23811L82.7796 5.23823C80.2242 7.54807 77.6764 9.85101 75.026 12C61.626 22.5 48.226 33 34.926 43.5L9.12598 63.9L9.12586 63.9001C8.7259 64.2001 8.32595 64.5 8.02598 64.8C7.32598 65.4 6.52598 65.8 5.62598 65C4.82598 64.3 5.02598 63.3 5.52598 62.6C6.12598 61.6 6.92598 60.6 7.72598 59.8C8.20935 59.3606 8.69271 58.919 9.17671 58.4769L9.17678 58.4768L9.17686 58.4767L9.17698 58.4766C11.9972 55.9003 14.8387 53.3044 17.826 51C39.426 34.4 61.126 17.9 83.626 2.5C84.826 1.6 86.126 0.8 87.426 0C87.426 0 87.526 0.1 87.826 0.2C87.5789 0.482421 87.3442 0.764841 87.1132 1.04286ZM166.026 21.9C165.676 22.1 165.326 22.325 164.976 22.55C164.626 22.775 164.276 23 163.926 23.2C149.326 31.8 134.926 40.7 120.826 50.2C99.226 64.6 77.826 79.4 57.426 95.4C53.626 98.4 49.926 101.4 46.226 104.4C45.626 104.9 45.126 105.3 44.526 105.7C43.726 106.3 42.926 106.6 42.126 105.9C41.326 105.2 41.526 104.2 42.026 103.5C42.626 102.5 43.326 101.5 44.226 100.7L44.3458 100.59C46.8091 98.3235 49.3691 95.9681 52.026 94C82.426 71 113.626 49.5 146.926 31C150.726 28.8667 154.615 26.9111 158.504 24.9556C160.448 23.9778 162.393 23 164.326 22C164.826 21.8 165.326 21.6 165.726 21.4C165.826 21.5 165.926 21.7 166.026 21.9ZM99.926 8.5C100.626 8 101.226 7.4 101.826 6.8C101.726 6.7 101.626 6.6 101.326 6.5C100.626 7 99.926 7.525 99.226 8.05C98.526 8.575 97.826 9.1 97.126 9.6C93.0918 12.5088 89.0545 15.4176 85.0158 18.3275L85.0151 18.328C65.7284 32.224 46.4088 46.1436 27.226 60.2C21.8311 64.1042 16.7385 68.3108 11.6263 72.5336L11.6262 72.5336C9.53676 74.2595 7.44401 75.9882 5.32601 77.7C3.82601 78.9 2.52601 80.3 1.22601 81.7C0.726013 82.2 0.226013 82.8 0.026013 83.5C-0.073987 84 0.126013 84.7 0.426013 85C0.726013 85.3 1.52601 85.4 1.92601 85.2C2.72601 84.8 3.42601 84.3 4.12601 83.7C6.54336 81.7156 8.93467 79.7052 11.3234 77.6969C15.5554 74.139 19.7794 70.5878 24.126 67.2C34.7347 58.9552 45.3766 50.8101 56.0135 42.669L56.0143 42.6684L56.015 42.6678C63.8265 36.6891 71.6352 30.7125 79.426 24.7C86.3253 19.3005 93.1247 13.9011 99.924 8.50163L99.926 8.5ZM100.426 22C99.326 23 98.226 24 97.026 24.9C93.6956 27.4851 90.3598 30.0703 87.0224 32.6567L87.015 32.6624C76.0246 41.1795 65.0165 49.7104 54.126 58.3C47.6804 63.3921 41.3179 68.5672 34.9849 73.7183C31.4926 76.5588 28.0093 79.3921 24.526 82.2L24.526 82.2001C23.726 82.9 22.926 83.6 22.026 84.1C21.526 84.4 20.426 84.4 20.126 84.1C19.726 83.7 19.626 82.7 19.926 82.2C20.326 81.4 20.926 80.6 21.626 79.9C22.3148 79.2686 22.9953 78.629 23.6771 77.9883L23.6772 77.9882C25.3709 76.3963 27.0722 74.7973 28.926 73.3C48.926 57.5 69.126 42 90.226 27.7C92.5211 26.1427 94.9505 24.5853 97.2941 23.083L97.2943 23.0828C97.8098 22.7524 98.3212 22.4246 98.826 22.1C99.226 21.9 99.626 21.7 100.026 21.4C100.102 21.5146 100.164 21.6 100.217 21.6729L100.217 21.673C100.302 21.791 100.364 21.8764 100.426 22ZM107.355 35.4442C107.542 35.2315 107.732 35.0157 107.926 34.8C107.626 34.6 107.526 34.5 107.526 34.5L107.526 34.5001C106.026 35.6001 104.526 36.7 103.026 37.7C86.326 48.8 70.226 60.7 54.326 72.8C49.6261 76.2999 45.0262 79.8999 40.4262 83.4998L40.426 83.5C39.526 84.2 38.726 85 38.026 85.8C37.426 86.5 37.126 87.4 37.826 88.2C38.526 89.1 39.426 89 40.226 88.5C41.326 87.9 42.426 87.2 43.426 86.4C45.176 85 46.901 83.575 48.626 82.15C50.351 80.725 52.076 79.3 53.826 77.9C65.926 68.4 78.126 58.9 90.326 49.5L105.326 37.5C106.032 36.951 106.676 36.2175 107.355 35.4442Z" fill="black"/>
</svg>
`
const springHorizontal = `<svg width="218" height="202" viewBox="0 0 218 202" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M128.805 75.2035C116.805 66.3035 111.705 53.8035 108.705 40.2035C107.005 32.6035 106.205 24.9035 107.205 17.1035C107.605 13.8035 108.205 10.6035 109.605 7.60352C110.505 5.80352 111.505 4.10352 112.905 2.60352C115.505 -0.196481 119.105 -0.696481 122.605 0.903519C124.805 1.90352 126.605 3.60352 128.105 5.40352C130.705 8.60352 132.605 12.2035 134.105 16.0035C138.105 26.0035 139.405 36.5035 139.205 47.3035C139.005 54.5035 138.205 61.7035 136.705 68.7035C136.605 69.2035 136.605 69.6035 136.505 70.2035C139.305 71.6035 142.305 71.9035 145.405 72.0035C158.305 72.6035 170.905 70.7035 183.105 66.5035C187.105 65.1035 191.005 63.5035 194.805 61.6035C202.205 58.1035 208.505 53.0035 213.505 46.6035C214.405 45.5035 215.305 44.4035 216.305 43.3035C216.405 43.2035 216.605 43.2035 217.105 43.2035C216.905 43.9035 216.805 44.4035 216.605 44.9035C212.705 53.2035 207.005 59.9035 199.405 65.1035C189.905 71.5035 179.405 75.5035 168.305 77.7035C159.205 79.5035 150.105 80.3035 140.905 79.2035C138.905 79.0035 136.805 78.5035 134.605 78.1035C134.405 78.6035 134.205 79.2035 134.005 79.8035C131.305 88.9035 128.105 97.7035 123.505 106.004C119.805 112.704 115.505 118.904 110.005 124.304C107.005 127.204 103.705 129.804 100.005 131.704C90.505 136.504 81.8049 135.004 74.6049 127.204C74.2049 126.804 73.8049 126.404 73.2049 125.804C72.8049 126.904 72.505 127.704 72.1049 128.604C69.505 135.804 66.6049 142.904 62.905 149.704C59.705 155.504 56.005 161.004 51.205 165.704C48.905 168.004 46.405 169.904 43.505 171.404C36.505 174.904 29.8049 174.404 23.4049 169.804C22.2049 169.004 21.2049 168.004 19.9049 167.004C19.5049 168.104 19.2049 168.904 18.9049 169.804C16.2049 177.804 12.905 185.704 8.80495 193.104C7.80495 195.004 6.60495 196.804 5.30495 198.504C4.70495 199.404 3.70495 200.004 2.80495 200.704C2.00495 201.204 1.10495 201.204 0.40495 200.404C-0.29505 199.604 0.0049504 198.804 0.60495 198.004C1.80495 196.304 2.90495 194.504 3.90495 192.704C8.90495 183.604 12.705 174.004 15.805 164.204C16.1049 163.304 16.305 162.404 15.605 161.504C9.10495 152.304 5.70495 141.904 3.60495 130.904C0.60495 115.604 0.0049504 100.104 1.80495 84.6035C2.40495 79.3035 3.40495 74.2035 5.60495 69.3035C6.40495 67.5035 7.40495 65.7035 8.60495 64.2035C11.605 60.5035 15.7049 60.3035 19.3049 63.5035C21.5049 65.5035 23.0049 67.9035 24.205 70.6035C26.705 75.8035 28.1049 81.4035 29.0049 87.1035C30.8049 98.0035 30.805 108.904 29.705 119.904C28.405 133.304 25.805 146.504 22.205 159.404C21.805 160.904 21.805 162.004 23.1049 163.004C24.705 164.304 26.2049 165.804 27.9049 166.904C31.7049 169.304 35.705 169.504 39.805 167.704C42.6049 166.504 44.905 164.704 47.005 162.604C50.705 159.104 53.6049 155.004 56.305 150.704C61.9049 141.504 66.005 131.604 69.405 121.404C69.705 120.504 69.805 119.804 69.305 118.904C64.805 109.804 62.805 100.004 61.805 90.0035C60.705 79.2035 60.805 68.4035 62.6049 57.7035C63.305 53.6035 64.205 49.5035 65.905 45.7035C66.6049 44.1035 67.505 42.5035 68.6049 41.2035C71.3049 38.0035 75.1049 38.1035 77.6049 41.4035C78.8049 43.0035 79.705 44.8035 80.405 46.7035C82.305 52.0035 82.905 57.6035 83.305 63.2035C84.305 81.1035 81.305 98.6035 76.305 115.704C76.105 116.304 76.005 116.904 75.7049 117.504C75.3049 118.504 75.505 119.404 76.1049 120.204C77.505 122.004 78.805 124.004 80.505 125.504C84.405 129.204 89.1049 130.104 94.1049 128.104C96.7049 127.104 99.2049 125.504 101.505 123.804C105.505 120.804 108.705 117.004 111.605 113.004C117.705 104.604 122.005 95.2035 125.405 85.4035C126.605 82.3035 127.605 78.8035 128.805 75.2035ZM18.0049 156.304C18.3049 155.704 18.4049 155.504 18.5049 155.204C18.705 154.704 18.8049 154.104 19.0049 153.604C22.705 140.504 25.205 127.104 26.0049 113.504C26.6049 103.604 26.405 93.7035 24.205 83.9035C23.205 79.5035 22.1049 75.2035 19.9049 71.2035C18.9049 69.5035 17.7049 67.9035 16.3049 66.5035C15.0049 65.2035 13.505 65.3035 12.405 66.9035C11.405 68.3035 10.505 69.9035 9.90495 71.5035C7.70495 77.0035 6.90495 82.8035 6.40495 88.7035C5.40495 101.604 6.10495 114.404 8.30495 127.204C9.90495 136.304 12.2049 145.204 16.4049 153.504C16.9049 154.204 17.3049 155.104 18.0049 156.304ZM130.605 66.7035C130.905 65.5035 131.105 64.7035 131.205 64.0035C131.605 61.2035 132.105 58.5035 132.405 55.7035C133.505 45.6035 133.205 35.6035 130.705 25.7035C129.405 20.6035 127.605 15.8035 124.705 11.4035C123.605 9.80352 122.305 8.40352 120.905 7.10352C119.005 5.50352 117.705 5.90352 116.405 8.00352C115.905 8.80352 115.505 9.70352 115.305 10.6035C114.805 12.9035 114.205 15.3035 114.005 17.7035C113.305 26.4035 114.505 34.9035 116.905 43.3035C119.005 50.5035 122.105 57.2035 127.005 63.0035C128.005 64.2035 129.205 65.3035 130.605 66.7035ZM73.505 44.5035C73.305 44.5035 73.005 44.5035 72.805 44.6035C72.305 45.5035 71.6049 46.3035 71.2049 47.2035C70.505 49.1035 69.7049 51.1035 69.2049 53.1035C66.8049 62.7035 66.405 72.5035 66.905 82.4035C67.305 91.4035 68.505 100.404 71.1049 109.104C71.3049 109.804 71.6049 110.504 71.905 111.204C72.505 110.404 72.905 109.604 73.005 108.804C74.2049 102.904 75.7049 97.1035 76.6049 91.2035C78.405 80.5035 79.005 69.7035 77.7049 59.0035C77.3049 55.4035 76.305 51.8035 75.305 48.3035C75.105 46.9035 74.2049 45.7035 73.505 44.5035Z" fill="black"/>
</svg>
`
const springVertical = `<svg width="407" height="408" viewBox="0 0 407 408" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M319.052 130.175C319.462 129.039 319.805 128.115 320.075 127.122C321.357 121.944 321.012 116.857 319.818 111.638C318.104 104.375 314.843 97.8381 310.808 91.6638C304.109 81.4909 295.59 72.8957 285.955 65.5868C271.681 54.7275 255.888 46.9979 238.716 42.1137C229.066 39.4016 219.358 37.7509 209.391 38.0833C205.786 38.1976 202.256 38.6645 198.728 39.2728C196.681 39.6511 194.714 40.6649 192.744 41.5372C192.04 41.8286 191.337 42.1199 190.764 41.5611C190.405 41.0705 190.042 40.297 190.035 39.7313C190.089 38.3871 190.998 37.4568 192.124 37.0189C194.374 36.0017 196.552 34.7732 198.951 34.32C202.83 33.4953 206.784 33.0233 210.814 32.9039C218.445 32.3875 226.164 33.355 233.681 35.1029C259.921 41.292 282.91 53.5312 302.163 72.6042C310.751 81.1279 317.798 90.8016 322.249 102.133C326.117 112.057 327.722 122.009 323.747 132.523C324.531 133.008 325.313 133.353 326.025 133.768C335.348 138.677 344.257 144.438 352.262 151.413C360.051 158.179 366.861 165.805 371.499 175.083C372.949 178.036 374.118 181.133 375.004 184.234C379.078 199.53 373.299 212.894 359.533 220.698C354.546 223.516 349.193 225.278 343.622 226.547C332.761 228.941 321.732 229.216 310.692 228.501C307.649 228.325 304.674 227.937 301.56 227.691C300.923 227.628 300.357 227.635 299.437 227.576C299.732 228.562 299.955 229.479 300.177 230.254C302.458 237.652 303.54 245.276 302.573 252.996C301.416 262.627 297.486 270.948 290.211 277.542C285.873 281.413 281.026 284.088 275.533 285.993C266.871 288.997 257.9 289.741 248.773 289.357C247.57 289.3 246.367 289.244 244.951 289.12C244.963 290.11 245.045 291.028 245.055 291.877C245.442 300.499 243.701 308.582 238.554 315.716C234.869 320.922 229.964 324.659 224.27 327.485C216.959 331.109 209.272 332.829 201.219 333.492C190.057 334.475 179.014 333.477 168.094 331.063C167.244 330.932 166.322 330.731 165.259 330.531C165.343 331.591 165.423 332.368 165.505 333.286C166.607 342.608 167.286 351.934 166.55 361.277C166.248 365.595 165.592 369.845 164.795 374.098C164.267 377.216 163.102 380.271 161.296 382.98C159.977 385.046 158.715 385.91 156.74 386.358C156.739 386.217 156.665 386.006 156.665 386.006C158.974 383.927 160.001 381.157 160.744 378.248C161.892 373.78 162.262 369.249 162.348 364.722C162.633 353.122 161.644 341.536 160.02 330.029C159.947 329.818 159.874 329.606 159.797 329.112C159.158 328.908 158.448 328.634 157.667 328.431C138.788 322.719 121.566 313.733 106.283 301.331C98.1428 294.782 90.9102 287.302 85.7085 278.172C83.8309 274.942 82.4473 271.635 81.4846 268.04C80.815 265.29 80.5696 262.535 80.8898 259.773C81.7347 253.611 85.0774 249.327 90.8496 247.136C94.8619 245.603 98.9628 245.553 103.212 246.068C111.923 247.165 119.672 250.536 126.872 255.329C142.843 266.168 153.558 280.959 158.803 299.494C160.872 306.824 162.167 314.516 163.813 321.992C163.964 322.839 164.116 323.686 164.268 324.533C164.552 324.671 164.695 324.81 164.908 324.878C177.887 328.045 191.057 329.442 204.401 327.655C211.955 326.644 219.074 324.649 225.601 320.539C236.337 313.692 241.43 302.033 239.429 288.621C238.72 288.488 237.799 288.287 236.948 288.156C220.156 285.459 204.393 280.134 189.79 271.329C183.735 267.654 178.099 263.55 173.298 258.304C170.503 255.297 167.919 252.075 166.458 248.274C165.584 246.163 164.92 243.838 164.751 241.577C164.264 236.35 166.899 232.075 171.68 229.754C174.423 228.519 177.316 227.989 180.286 227.953C185.376 227.892 190.339 228.963 195.098 230.674C206.319 234.64 215.944 241.1 224.248 249.486C233.554 258.85 240.332 269.658 243.6 282.63C243.673 282.842 243.746 283.053 243.893 283.475C244.53 283.538 245.239 283.671 245.876 283.734C253.308 284.281 260.801 284.049 268.135 282.405C273.848 281.134 279.126 279.019 283.893 275.567C290.413 270.892 294.509 264.549 296.325 256.819C297.809 250.861 297.877 244.778 296.672 238.711C295.994 235.255 294.893 231.944 294.004 228.561C293.632 227.08 292.706 226.455 291.147 226.191C280.519 224.48 270.163 221.918 260.01 218.576C244.464 213.601 229.396 207.277 215.501 198.605C208.732 194.373 202.452 189.641 197.077 183.695C194.424 180.686 192.122 177.461 190.873 173.586C188.888 167.317 191.44 161.982 197.563 159.575C199.252 158.847 201.085 158.401 202.922 158.237C205.818 157.99 208.646 157.956 211.478 158.204C217.778 158.765 223.951 160.458 229.848 162.721C250.591 170.532 268.346 182.693 282.765 199.703C288.074 206.003 292.613 212.949 296.098 220.403C296.605 221.458 297.11 222.229 298.525 222.354C309.857 223.773 321.11 224.556 332.481 223.358C338.979 222.714 345.329 221.506 351.382 219.17C354.902 217.854 358.276 216.117 361.218 213.818C368.856 207.998 372.157 200.321 371.406 190.783C370.828 183.931 368.138 177.811 364.532 172.056C359.702 164.406 353.473 158.046 346.404 152.403C339.12 146.551 331.283 141.696 322.958 137.483C322.531 137.205 322.105 137.069 321.538 136.934C321.118 137.363 320.698 137.651 320.42 138.079C316.8 142.79 312.244 146.168 306.681 148.145C303.02 149.462 299.215 150.639 295.404 151.251C279.099 153.782 263.372 151.426 248.299 144.678C244.815 143.093 241.467 141.083 238.747 138.428C237.889 137.59 237.03 136.752 236.241 135.842C231.574 130.029 232.77 123.65 238.945 119.616C241.541 117.958 244.429 117.004 247.392 116.402C252.046 115.356 256.853 115.156 261.734 115.31C273.972 115.657 285.883 118.2 297.456 122.091C303.917 124.206 310.173 126.959 316.496 129.357C317.416 129.417 318.198 129.761 319.052 130.175ZM159.299 323.037C158.769 320.144 158.315 317.604 157.788 314.993C156.06 306.599 154.121 298.278 150.562 290.471C143.663 275.492 133.266 263.667 118.815 255.709C113.475 252.733 107.724 250.751 101.566 250.331C98.5932 250.084 95.6951 250.189 92.809 251.285C88.7269 252.89 86.2156 255.749 85.9159 260.208C85.8001 262.33 85.8274 264.593 86.4885 266.636C87.3728 269.595 88.5399 272.551 90.058 275.291C94.3943 283.017 100.412 289.45 107.128 295.168C121.776 307.649 138.432 316.641 156.747 322.502C157.456 322.635 158.235 322.696 159.299 323.037ZM290.869 220.749C290.577 220.045 290.502 219.693 290.286 219.342C287.391 213.861 284.006 208.739 280.13 203.978C270.225 191.934 258.299 182.248 244.701 174.705C235.518 169.653 225.994 165.667 215.647 163.811C212.316 163.215 208.849 163.045 205.455 163.086C203.334 163.111 201.22 163.703 199.179 164.505C196.223 165.672 195.192 168.16 196.006 171.191C196.378 172.671 197.03 174.007 197.824 175.341C200.063 179.203 203.142 182.349 206.5 185.207C211.574 189.601 217.065 193.424 222.974 196.677C243.693 208.377 265.919 215.959 289.24 220.556C289.594 220.623 290.09 220.688 290.869 220.749ZM238.579 282.62C238.429 281.915 238.422 281.349 238.204 280.857C237.327 278.463 236.66 275.996 235.572 273.676C229.322 259.749 219.363 249.05 206.537 241.002C200.267 237.117 193.727 234.226 186.428 232.971C183.097 232.375 179.771 232.203 176.386 232.951C170.886 234.29 168.598 238.065 170.079 243.563C170.893 246.594 172.623 249.261 174.562 251.712C178.729 257.178 184.154 261.355 189.926 265.034C204.321 274.194 220.086 279.661 236.809 282.429C237.235 282.566 237.8 282.559 238.579 282.62ZM316.91 134.373C316.269 134.027 315.842 133.75 315.486 133.542C301.338 127.278 286.643 122.576 271.273 120.569C264.828 119.727 258.388 119.31 251.893 120.237C248.998 120.626 246.037 121.369 243.364 122.532C237.595 125.006 236.94 129.257 241.308 133.801C244.101 136.667 247.448 138.677 251.074 140.26C264.51 146.108 278.467 148.273 293.014 146.542C298.38 145.912 303.526 144.506 308.303 141.902C311.605 140.095 314.476 137.726 316.91 134.373Z" fill="black"/>
</svg>
`

class StickersComponentDrawer {
	constructor() {
		const canvas = document.createElement("canvas");
		this.canvas = canvas;
		canvas.width = 1000;
		canvas.height = 1000;
		this.ctx = canvas.getContext("2d");
	}

	async draw(props = {}) {
		Object.assign(this, props);

		// this.ctx.clearRect(0, 0, 2000, 2000);

		return this.drawRibbon();
	}

	drawRibbon() {
		const width = 200;
		const height = 800;

		this.canvas.height = height;
		this.canvas.width = width;
		const ctx = this.ctx;
		const lineWidth = 20;
		const centerX = width / 2;
		const amplitude = -width / 2 + lineWidth;
		const fold = height / 200;

		ctx.strokeStyle = this.color;
		ctx.lineWidth = lineWidth;

		ctx.beginPath();
		ctx.moveTo(centerX, 0);

		for (var i = 0; i <= height; i += 0.5) {
			ctx.lineTo(
				centerX + amplitude * Math.sin((8 * i * Math.PI) / 180),
				i * fold
			);
			ctx.stroke();
		}

		const res = this.canvas.toDataURL();

		showPreview(res);

		return res;
	}

	async drawImage() {
		const width = this.canvas.width;
		const height = this.canvas.height;
		const ctx = this.ctx;

		ctx.fillStyle = this.color;
		ctx.fillRect(0, 0, width, height);

		const res = this.canvas.toDataURL();

		showPreview(res);

		return res;
	}
}

export default function ShapesComponent() {
	const previewRef = useRef(null);
	const stickersDrawerRef = useRef((data) => {
		if (!window.stickersComponentDrawer)
			window.stickersComponentDrawer = new StickersComponentDrawer();

		window.stickersComponentDrawer.draw(data).then(setUrl);
	});
	const [url, setUrl] = useState();
	const [data, updateField] = useDataSchema(
		{
			color: "#ac1f40",
		},
		stickersDrawerRef.current
	);

	useEffect(() => {
		stickersDrawerRef.current(data);

		window.AddOnSdk?.app.enableDragToDocument(previewRef.current, {
			previewCallback: (element) => {
				return new URL(element.src);
			},
			completionCallback: exportImage,
		});
	}, []);

	const exportImage = async (e) => {
		const fromDrag = e?.target?.nodeName != "IMG";
		const blob = await fetch(previewRef.current.src).then((response) =>
			response.blob()
		);

		if (fromDrag) return [{ blob }];
		else window.AddOnSdk?.app.document.addImage(blob);
	};

	return (
		<>
			<div
				className="relative relative border-b flex center-center p-3"
				style={{ display: !url ? "none" : "" }}
			>
				<div className="image-item relative" draggable="true">
					<img
						onClick={exportImage}
						ref={previewRef}
						className="drag-target max-w-full"
						src={url}
						style={{ maxHeight: "20vh" }}
					/>
				</div>
			</div>

			<div className="px-12px">
				<ComponentFields
					schema={{
						color: {
							type: "color",
							meta: {
								singleChoice: true,
								choiceSize: 30,
							},
						},
					}}
					onChange={updateField}
					data={data}
				/>
			</div>
		</>
	);
}
